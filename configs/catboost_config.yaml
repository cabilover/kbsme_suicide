# CatBoost 모델 설정 파일
# 범주형 변수 처리 강점과 과적합 방지 기능을 위한 최적화된 파라미터

# 데이터 설정
data:
  file_path: "data/processed_data.csv"
  encoding: "utf-8"
  na_values: ["", "nan", "NaN", "NULL", "null"]

# 피처 설정
features:
  target_columns:
    - "anxiety_score_next_year"
    - "depress_score_next_year"
    - "sleep_score_next_year"
    - "suicide_t_next_year"
    - "suicide_a_next_year"
  
  # 제외할 컬럼들
  exclude_columns:
    - "id"
    - "patient_id"
    - "visit_date"
    - "visit_year"
  
  # 범주형 변수 처리
  categorical_columns:
    - "gender"
    - "marital_status"
    - "education_level"
    - "income_level"
    - "residence_type"
    - "insurance_type"
    - "primary_diagnosis"
    - "comorbidity"
    - "medication_type"
    - "treatment_type"
    - "follow_up_status"

# 데이터 분할 설정
data_split:
  method: "stratified_kfold"
  n_splits: 5
  random_state: 42
  test_size: 0.2
  val_size: 0.2

# 모델 설정
model:
  model_type: "catboost"
  
  # CatBoost 특화 파라미터
  catboost:
    # 기본 파라미터
    iterations: 100
    depth: 6
    learning_rate: 0.1
    l2_leaf_reg: 3
    
    # 범주형 변수 처리
    cat_features: []  # 자동 감지
    cat_l2: 10.0
    cat_smooth: 10.0
    max_cat_threshold: 32
    one_hot_max_size: 10
    
    # 과적합 방지
    random_strength: 1
    bagging_temperature: 1
    border_count: 254
    feature_border_type: "GreedyLogSum"
    
    # Early Stopping
    early_stopping_rounds: 10
    
    # 성능 최적화
    thread_count: -1  # 모든 CPU 코어 사용
    verbose: false
    
    # 불균형 데이터 처리
    class_weights: [1, 1]  # 기본값, 나중에 계산
    auto_class_weights: "Balanced"
    
    # 부스팅 파라미터
    boosting_type: "Plain"
    bootstrap_type: "Bernoulli"
    subsample: 0.8
    
    # 정규화
    rsm: 0.8  # feature_fraction과 동일
    leaf_estimation_method: "Newton"
    
    # 손실 함수 (자동 설정됨)
    loss_function: "Logloss"  # 분류의 경우
    # loss_function: "RMSE"  # 회귀의 경우
    
    # 평가 메트릭 (자동 설정됨)
    eval_metric: "Logloss"  # 분류의 경우
    # eval_metric: "RMSE"  # 회귀의 경우
    
    # 랜덤성
    random_seed: 42
    bootstrap_seed: 42
    feature_weights: null
    
    # 고급 파라미터
    min_data_in_leaf: 1
    max_leaves: 31
    grow_policy: "SymmetricTree"
    min_fold_size: 1
    leaf_estimation_iterations: 1
    fold_permutation_block: 1
    leaf_estimation_backtracking: "AnyImprovement"
    best_model_min_trees: 1
    model_shrink_rate: 0
    model_shrink_mode: "Constant"
    langevin: false
    diffusion_temperature: 10000
    posterior_sampling: false
    boost_from_average: true
    allow_const_label: false
    score_function: "Cosine"
    monotone_constraints: ""
    feature_weights: null
    penalties_coefficient: 1
    first_feature_use_penalties: 0
    per_object_feature_penalties: null
    model_size_reg: 0.5
    feature_border_type: "GreedyLogSum"
    per_float_feature_quantization: ""
    input_borders: null
    output_borders: null
    feature_calcers: null
    text_processing: null
    embedding_processing: null
    eval_fraction: 0
    fixed_binary_splits: null
    ignored_features: null
    train_dir: null
    name: "experiment"
    prediction_type: "Probability"
    fold_len_multiplier: 2
    class_weights: null
    auto_class_weights: null
    scale_pos_weight: 1
    has_time: false
    allow_writing_files: false
    save_snapshot: false
    snapshot_file: null
    snapshot_interval: 600
    iterations: 100
    leaf_estimation_method: "Newton"
    gradient_iterations: 1
    random_seed: 42
    bootstrap_type: "Bernoulli"
    bootstrap_seed: 42
    bagging_temperature: 1
    subsample: 0.8
    sampling_unit: "Object"
    mvs_reg: 0.1
    random_strength: 1
    min_data_in_leaf: 1
    max_leaves: 31
    grow_policy: "SymmetricTree"
    min_fold_size: 1
    leaf_estimation_iterations: 1
    fold_permutation_block: 1
    leaf_estimation_backtracking: "AnyImprovement"
    best_model_min_trees: 1
    model_shrink_rate: 0
    model_shrink_mode: "Constant"
    langevin: false
    diffusion_temperature: 10000
    posterior_sampling: false
    boost_from_average: true
    allow_const_label: false
    score_function: "Cosine"
    monotone_constraints: ""
    feature_weights: null
    penalties_coefficient: 1
    first_feature_use_penalties: 0
    per_object_feature_penalties: null
    model_size_reg: 0.5
    feature_border_type: "GreedyLogSum"
    per_float_feature_quantization: ""
    input_borders: null
    output_borders: null
    feature_calcers: null
    text_processing: null
    embedding_processing: null
    eval_fraction: 0
    fixed_binary_splits: null
    ignored_features: null
    train_dir: null
    name: "experiment"
    prediction_type: "Probability"
    fold_len_multiplier: 2
    class_weights: null
    auto_class_weights: null
    scale_pos_weight: 1
    has_time: false
    allow_writing_files: false
    save_snapshot: false
    snapshot_file: null
    snapshot_interval: 600
    
    # Focal Loss 설정 (CatBoost는 직접 지원하지 않지만 설정을 인식)
    use_focal_loss: false  # Focal Loss 사용 여부 (true/false)
    focal_loss:
      alpha: 0.25  # 클래스 가중치 (0 < alpha < 1). 소수 클래스에 더 큰 가중치
      gamma: 2.0   # 포커싱 파라미터 (gamma >= 0). 쉬운 샘플의 기여도를 낮춤

# 전처리 설정
preprocessing:
  # 결측치 처리
  missing_value_strategy: "median"
  
  # 이상치 처리
  outlier_detection:
    method: "iqr"
    threshold: 1.5
  
  # 스케일링 (CatBoost는 범주형 변수를 자동 처리하므로 최소한의 전처리)
  scaling:
    method: "robust"
    with_mean: true
    with_std: true
  
  # 피처 선택
  feature_selection:
    method: "variance_threshold"
    threshold: 0.01
  
  # 범주형 변수 처리 (CatBoost가 자동 처리)
  categorical_encoding:
    method: "none"  # CatBoost가 자동 처리
    drop_first: false
    sparse: false

# 평가 설정
evaluation:
  # 분류 메트릭
  classification_metrics:
    - "accuracy"
    - "precision"
    - "recall"
    - "f1"
    - "auc"
    - "roc_auc"
    - "average_precision"
    - "balanced_accuracy"
  
  # 회귀 메트릭
  regression_metrics:
    - "mse"
    - "rmse"
    - "mae"
    - "r2"
    - "explained_variance"
    - "mean_absolute_percentage_error"
  
  # 교차 검증
  cv_metrics:
    - "accuracy"
    - "f1"
    - "auc"
    - "rmse"
    - "r2"
    - "balanced_accuracy"
  
  # 모델 해석 메트릭
  interpretability_metrics:
    - "feature_importance"
    - "permutation_importance"
    - "shap_values"

# 출력 설정
output:
  directory: "results/catboost"
  save_model: true
  save_predictions: true
  save_feature_importance: true
  save_confusion_matrix: true
  save_roc_curve: true
  save_precision_recall_curve: true
  save_shap_values: true

# 로깅 설정
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/catboost_experiment.log"

# 실험 설정
experiment:
  name: "catboost_suicide_prediction"
  description: "CatBoost를 사용한 자살 위험 예측 모델 - 범주형 변수 처리 강점"
  tags:
    - "catboost"
    - "suicide_prediction"
    - "healthcare"
    - "classification"
    - "regression"
    - "categorical_features"
  
  # 하이퍼파라미터 튜닝
  hyperparameter_tuning:
    enabled: false
    method: "optuna"
    n_trials: 100
    timeout: 3600  # 1시간
    
    # 튜닝할 파라미터
    parameters:
      iterations:
        type: "int"
        low: 50
        high: 300
      depth:
        type: "int"
        low: 4
        high: 10
      learning_rate:
        type: "float"
        low: 0.01
        high: 0.3
      l2_leaf_reg:
        type: "float"
        low: 1
        high: 10
      random_strength:
        type: "float"
        low: 0.1
        high: 10
      bagging_temperature:
        type: "float"
        low: 0.1
        high: 2.0
      border_count:
        type: "int"
        low: 32
        high: 255
  
  # 모델 해석 설정
  interpretability:
    # SHAP 값 계산
    calculate_shap: true
    shap_background_samples: 100
    
    # 순열 중요도
    permutation_importance: true
    n_repeats: 5
    
    # 피처 중요도 시각화
    feature_importance_plot: true
    top_n_features: 20
    
    # CatBoost 특화 해석
    catboost_interpretability:
      # 피처 중요도 타입
      importance_type: "PredictionValuesChange"
      # 다른 옵션: "LossFunctionChange", "ShapValues"
      
      # 범주형 피처 분석
      categorical_analysis: true
      cat_feature_importance: true

# CatBoost 특화 설정
catboost_specific:
  # 범주형 변수 자동 감지
  auto_cat_features: true
  
  # 범주형 변수 임계값
  cat_features_threshold: 10  # 고유값이 10개 이하인 수치형 변수를 범주형으로 처리
  
  # 범주형 변수 인코딩 방법
  cat_encoding_method: "auto"  # CatBoost가 자동 선택
  
  # 범주형 변수 정규화
  cat_l2: 10.0
  cat_smooth: 10.0
  
  # 범주형 변수 임계값
  max_cat_threshold: 32
  
  # One-Hot 인코딩 임계값
  one_hot_max_size: 10 